% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{predict.prim}
\alias{predict.prim}
\title{Predict method for a \code{prim} object}
\usage{
\method{predict}{prim}(
  object,
  newx,
  newy,
  npeel = NULL,
  support = NULL,
  yfun = NULL,
  npaste = NULL,
  ...
)
}
\arguments{
\item{object}{A \code{prim} object.}

\item{newx}{A data.frame of new input values. If missing, uses
\code{object$x}.}

\item{newy}{A vector of new responses values corresponding to the
inputs in \code{newx}. If missing, uses
\code{object$y}.}

\item{npeel}{Integer vector indicating which boxes in \code{object} 
to use for prediction, through the number of peeling iteration.}

\item{support}{Numeric vector with values between 0 and 1 indicating the 
support of boxes in \code{object} to use for prediction.}

\item{yfun}{Numeric vector indicating the value of the objective function
for the boxes in \code{object} to use for prediction.}

\item{npaste}{Integer vector indicating which boxes in \code{object} 
to use for prediction, through the number of pasting iteration.}

\item{...}{further arguments passed to or from other methods.}
}
\value{
A list with elements:
   \item{inbox}{A logical matrix of dimension n x nboxes where n is the
     number of observations in \code{newx}. For each observation and each 
     returns \code{TRUE} if the observation is inside the box.}
   \item{support}{A numeric vector giving, for each box, the proportion
     of observations in \code{newx} lying inside the box.}
   \item{yfun}{A numeric vector giving, for each box, the objective function
     value computed on \code{newy}.}
}
\description{
For each observation in \code{newx}, check if it is in selected boxes of 
   \code{object}. Also gives the objective function values of each box
   based on the \code{newy} values.
}
\examples{
   set.seed(12345)
   x <- matrix(runif(2000), ncol = 2, dimnames = list(NULL, c("x1", "x2")))
   y <- 2 * x[,1] + 5 * x[,2] + 10 * (x[,1] >= .8 & x[,2] >= .5) + rnorm(1000)
   # Peeling step
   peel_res <- peeling(y, x)
   # Prediction
   predict(peel_res, newx = data.frame(x1 = 1:10/11, x2 = 1:10/11),
     newy = 1:10, support = c(1, 0.25))

}
\seealso{
\code{peeling} and \code{pasting} for creating \code{prim}
   objects.
}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plots.R
\name{plot_box}
\alias{plot_box}
\title{Plot a box}
\usage{
plot_box(object, select = 1:2, npeel = NULL, support = NULL,
  yfun = NULL, npaste = NULL, ypalette = NULL, box.args = list(),
  ...)
}
\arguments{
\item{object}{A 'prim' object.}

\item{select}{A vector of length 1 or 2 indicating the input variables(s) 
to plot. Default to the two first ones. 
If a single variable is selected, plot it against \code{y}.}

\item{npeel}{Integer vector indicating the number of peeling iteration
of boxes to plot.}

\item{support}{Numeric vector with values between 0 and 1 indicating the 
support of boxes to plot.}

\item{yfun}{Numeric vector indicating the value of the objective function
of the boxes to plot.}

\item{npaste}{Integer vector indicating the number of pasting iteration
of boxes to plot.}

\item{ypalette}{A palette of colors for representing the \code{y} value
associated to each point.}

\item{box.args}{A list of arguments to be passed to 
\code{\link[graphics]{rect}} for drawing boxes. All arguments can be 
given as vectors to specify different values for each drawn box.}

\item{...}{Additional graphical parameters for 
\code{\link[graphics]{plot}}.}
}
\description{
Plots a bidimensional projection of the data and chosen boxes.
}
\details{
Several boxes can be displayed at once, selected by one of the
   arguments \code{npeel}, \code{support}, \code{yfun} or \code{npaste}
   (when relevant). Note that the arguments in \code{box.args} allow
   giving different parameters to each displayed box.
}
\examples{
   # A simple bump
   set.seed(12345)
   x <- matrix(runif(2000), ncol = 2, dimnames = list(NULL, c("x1", "x2")))
   y <- 2 * x[,1] + 5 * x[,2] + 10 * (x[,1] >= .8 & x[,2] >= .5) + 
     rnorm(1000)
   # Peeling with alpha = 0.05 and beta.stop = 0.05
   peel_res <- peeling(y, x, beta.stop = 0.05)
   # Automatically choose the best box
   chosen <- jump.prim(peel_res)
   # Plot the resulting box
   plot_box(peel_res, pch = 16, ypalette = hcl.colors(10), 
     support = chosen$final.box$support, box.args = list(lwd = 2))

}
\seealso{
\code{\link{peeling}} for peeling trajectories.
}

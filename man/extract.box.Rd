% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods.R
\name{extract.box}
\alias{extract.box}
\title{Extract boxes}
\usage{
extract.box(object, npeel = NULL, support = NULL, yfun = NULL,
  npaste = NULL)
}
\arguments{
\item{object}{\code{prim} object.}

\item{npeel}{Integer vector indicating which boxes to choose in \code{object} 
through the number of peeling iteration.}

\item{support}{Numeric vector with values between 0 and 1 indicating the 
support of boxes to choose in \code{object}.}

\item{yfun}{Numeric vector indicating the value of the objective function
for the chosen boxes in \code{object}.}

\item{npaste}{Integer vector indicating which boxes to choose in 
\code{object} through the number of pasting iteration.}
}
\value{
A list with elements:
   \item{limits}{A list giving the limits of extracted boxes. Each limit is 
     a list with one element per input variable.}
   \item{npeel}{A vector giving the number of peeling iterations leading to 
     each extracted box.}
   \item{yfun}{A vector giving the objective function value of each 
     extracted box.}
   \item{support}{A vector giving the support of each extracted box.}
}
\description{
Extracts one or several boxes from a \code{prim} object.
}
\details{
Returns one or several boxes from \code{object}. The boxes can be
   given through the number of peeling iterations (argument \code{npeel}), 
   pasting iterations (argument \code{npaste}), closest support 
   (argument \code{support}) or closest objective function value
   (argument \code{yfun}). Note that several of these arguments can be
   used at once to return several boxes. If no box matches the arguments
   or if they are all \code{NULL}, the last box in \code{object} is
   returned.
}
\examples{
   # A simple bump
   set.seed(12345)
   x <- matrix(runif(2000), ncol = 2, dimnames = list(NULL, c("x1", "x2")))
   y <- 2 * x[,1] + 5 * x[,2] + 10 * (x[,1] >= .8 & x[,2] >= .5) + rnorm(1000)
   # Peeling step
   peel_res <- peeling(y, x)
   # Extracting a single box
   single_box <- extract.box(peel_res, support = 0.1)
   # Extracting all boxes from a prim object
   all_boxes <- extract.box(peel_res, npeel = 0:peel_res$npeel)

}
\seealso{
\code{peeling} to perform the peeling and create a \code{prim}
   object.
}
